<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder
		location="	
		classpath*:jdbc.testing.properties,
		classpath*:jdbc.logging.properties,
	classpath*:jdbc.${spring.profiles.default}.properties
	" />

<!-- 	<tx:annotation-driven />
<bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">

    <property name="baselineOnMigrate" value="true" />

    <property name="locations" value="classpath:/db/migration" />

    <property name="dataSource" ref="dataSource" />

</bean> -->

 

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driver}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}" p:maxWait="40000"
		p:maxActive="80" p:maxIdle="20" />

	<!-- DATA SOURCE LOGGING ke MYSQL -->
	<bean id="dataSourceLogging" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbcLogging.driver}"
		p:url="${jdbcLogging.url}" p:username="${jdbcLogging.username}"
		p:password="${jdbcLogging.password}" p:maxWait="40000" p:maxActive="80"
		p:maxIdle="20" />

	<!-- Definition for loggingJdbcDaoImpl bean -->
	<bean id="loggingJdbcDaoImpl"
		class="com.ecomerce.medifirst2000.logging.dao.LoggingJdbcDaoImpl">
		<property name="dataSource" ref="dataSourceLogging" />
	</bean>

	<!-- we use hikari cp connection polling -->
	<!-- <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig"> <property 
		name="poolName" value="springHikariCP" /> <property name="dataSourceClassName" 
		value="org.postgresql.ds.PGSimpleDataSource" /> <property name="maximumPoolSize" 
		value="30" /> <property name="connectionTestQuery" value="select 1" /> <property 
		name="dataSourceProperties"> <props> <prop key="serverName">${jdbc.serverName}</prop> 
		<prop key="portNumber">${jdbc.portNumber}</prop> <prop key="databaseName">${jdbc.databaseName}</prop> 
		<prop key="user">${jdbc.username}</prop> <prop key="password">${jdbc.password}</prop> 
		</props> </property> </bean> <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"> 
		<constructor-arg ref="hikariConfig" /> </bean> -->

	<bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.ecomerce.medifirst2000.entities" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="${hibernate.dialect}" />
				<property name="showSql" value="true" />
				<property name="generateDdl" value="false" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl}" />
			</map>
		</property>
		<!-- <property name="mappingResources" value="com/ecomerce/medifirst2000/purchasedTest.hbm.xml"/> -->
	</bean>

	<jpa:repositories base-package="com.ecomerce.medifirst2000.dao"
		repository-impl-postfix="CustomImpl" />
		<context:component-scan base-package="com.ecomerce.medifirst2000.service" />
		

	<!-- Hibernate Statistics Monitoring -->
	<!-- Publishing session factory to be able view statistics -->
	<!-- <bean id="sessionFactory" factory-bean="entityManagerFactory" factory-method="getSessionFactory" 
		/> <bean id="hibernateStatisticsMBean" class="org.hibernate.jmx.StatisticsService"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> <bean id="mbeanExporter" 
		class="org.springframework.jmx.export.MBeanExporter"> <property name="beans"> 
		<map> <entry key="SpringBeans:name=hibernateStatisticsMBean" value-ref="hibernateStatisticsMBean" 
		/> </map> </property> </bean> <context:mbean-server /> -->

	<!-- <context:component-scan base-package="com.ecomerce.medifirst2000" 
		/> -->


	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>
	</bean>

	<!-- enable aop
	<aop:aspectj-autoproxy /> -->

	<!-- For Bean Spring Security -->
	<!--<bean id="springSecurityFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy"/> -->
</beans>
